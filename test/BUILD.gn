# Copyright (C) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
SUBSYSTEM_DIR = "../.."
import("$SUBSYSTEM_DIR/core_service/telephony_core_service.gni")
import("$SUBSYSTEM_DIR/core_service/test/core_service_test.gni")

group("telephony_mock_deps") {
  deps = []
  if (use_clang_coverage) {
    deps += [
      "./mock/ffrt:ffrt_mocked",
      ":core_service_test_base"
    ]
  }
}

config("core_service_test_config") {
  include_dirs = core_service_incluedirs
}

ohos_static_library("core_service_test_base") {
  use_exceptions = true
  sources = core_service_base_src
  branch_protector_ret = "pac_ret"
  public_configs = [ ":core_service_test_config" ]
  external_deps = core_service_external_deps
  defines = core_service_defines
  deps = [ "mock/ffrt:ffrt_mocked" ]
  part_name = "core_service"
  subsystem_name = "telephony"
}

group("unittest") {
  testonly = true
  deps = []
  deps += [
    "unittest/core_service_gtest:tel_core_service_common_test",
    "unittest/core_service_gtest:tel_core_service_gtest",
    "unittest/core_service_gtest:tel_core_service_native_branch_gtest",
    "unittest/core_service_gtest:tel_core_service_test",
    "unittest/core_service_gtest:tel_core_zero_branch_gtest",
    "unittest/core_service_gtest:tel_network_search_branch_gtest",
    "unittest/core_service_gtest:tel_network_search_gtest",
    "unittest/core_service_gtest:tel_network_search_manager_gtest",
    "unittest/core_service_gtest:tel_network_search_zero_branch_gtest",
    "unittest/core_service_gtest:tel_sim_gtest",
    "unittest/core_service_gtest:tel_sim_zero_branch_gtest",
    "unittest/core_service_gtest:tel_satellite_service_gtest",
    "unittest/core_service_gtest:tel_sim_core_service_gtest",
    "unittest/core_service_gtest:tel_sim_elementary_file_gtest",
    "unittest/core_service_gtest:tel_sim_icc_gtest",
    "unittest/core_service_gtest:tel_sim_type_convert_gtest",
    "unittest/core_service_gtest:tel_vcard_gtest",
    "unittest/core_service_gtest:tel_vsim_gtest",
    "unittest/icc_dialling_numbers_handler_gtest:icc_dialling_numbers_handler_gtest",
    "unittest/icc_file_gtest:icc_file_gtest",
    "unittest/raw_parcel_core_service_gtest:raw_parcel_core_service_test",
    "unittest/sim_gtest:sim_gtest",
    "unittest/sim_state_handle_gtest:sim_state_handle_gtest",
    "unittest/tel_ril_gtest:tel_ril_gtest",
    "unittest/tel_ril_gtest:tel_ril_common_gtest",
    "unittest/tel_ril_gtest:tel_ril_zero_branch_gtest",
    "unittest/tel_ril_gtest:tel_ril_handler_gtest",
    "unittest/utils_vcard_gtest:utils_vcard_branch_gtest",
    "unittest/utils_vcard_gtest:utils_vcard_gtest",
    "unittest/utils_vcard_gtest:utils_vcard_constructor_gtest",
  ]

  if (core_service_support_esim) {
    deps += [
      "unittest/esim_gtest:core_manager_inner_test",
      "unittest/esim_gtest:esim_core_service_client_branch_test",
      "unittest/esim_gtest:esim_service_client_branch_gtest",
      "unittest/esim_gtest:esim_file_branch_test",
      "unittest/esim_gtest:tel_esim_gtest",
      "unittest/esim_parcel_gtest:parcel_gtest",
      "unittest/utils_codec_gtest:utils_codec_gtest",
    ]
  }
}

group("test") {
  testonly = true
  deps = [
    ":unittest",
    "fuzztest:fuzztest"
  ]
}
